name: CI

on:
  push:
    branches: [main]        # still only run on direct pushes to main
  pull_request:             # run on every PR to any branch

# ────────────────────────
# Prevent wasted work:
# If a new commit arrives for the same PR/branch,
# cancel the still‑running workflow so only the
# *latest* tests & coverage finish.
# ────────────────────────
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # ────────────────────────
  # Fast unit‑test matrix
  # ────────────────────────
  tests:
    # run for PRs OR for direct pushes to main
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Minimum‑supported stack (matplotlib 3.7 is incompatible with numpy 2.0, use numpy 1.x)
          - {python: '3.10', tox_env: 'py3.10-mpl37-np1x'}

          # Diagonal
          - {python: '3.10', tox_env: 'py3.10-mpl38-np20'}
          - {python: '3.11', tox_env: 'py3.11-mpl39-np21'}
          - {python: '3.12', tox_env: 'py3.12-mpl310-np22'}

          # Bleeding‑edge safety net (dev branches)
          - {python: '3.12', tox_env: 'py3.12-mpldev-npdev'}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install tox
        run: python -m pip install --upgrade pip setuptools tox==3.28.0

      - name: Run tox (${{ matrix.tox_env }})
        run: python -m tox -e ${{ matrix.tox_env }} -- --junit-xml pytest.xml

      # Fail‑only graphics artefacts (optional)
      - name: Upload result_images
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: result_images-${{ matrix.tox_env }}
          path: result_images

      # Always upload XML for test‑summary apps
      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.tox_env }}
          path: pytest.xml

  # ────────────────────────
  # Coverage: runs after fast tests,
  # applies *only* to PRs, and thanks to
  # concurrency we keep just the latest run.
  # ────────────────────────
  coverage:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install tox
        run: python -m pip install --upgrade pip setuptools tox==3.28.0

      - name: Run coverage env
        run: |
          python -m tox -e coverage | tee pytest-coverage.txt

      - name: Post coverage comment
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt

      - name: Upload coverage artefact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: pytest-coverage.txt

  # ────────────────────────
  # Code style / lint
  # ────────────────────────
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: |
          python -m pip install --upgrade pip setuptools tox==3.28.0
          python -m tox -e flake8
